process AnalyzePersistentVertices =  {
  #keep the logging output to a nice level
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  source = PoolSource { 
    untracked vstring fileNames = {
	'/store/RelVal/2007/3/20/RelVal130pre6QCD_pt80_120-DIGI-RECO/0000/94F120A9-0AD7-DB11-B85F-003048769E89.root',
	'/store/RelVal/2007/3/20/RelVal130pre6QCD_pt80_120-DIGI-RECO/0000/D88DD82A-23D7-DB11-953A-00304870E0D5.root'
    }
    untracked int32 maxEvents = 100
  }

  # Offline primary vertex finding from both track types
  #include "RecoVertex/Configuration/data/RecoVertex.cff"
  include "Validation/RecoVertex/data/validationRecoVertex.cff"

  # primary vertex analyzer
  module simplePersistentVertexAnalysis = PrimaryVertexAnalyzer {
      InputTag simG4 = g4SimHits
      untracked string recoTrackProducer="ctfWithMaterialTracks"
      untracked string outputFile="simplePersistentVertexAnalyzer.root"
      untracked bool verbose=true
#     untracked string vtxSample="offlinePrimaryVerticesFromRSTracks"
      untracked vstring vtxSample={"offlinePrimaryVerticesFromCTFTracksAVF"}
  }


  module dump = EventContentAnalyzer {}
  service = Tracer { untracked string indention = "$$"}
  path p = { 
       vertexreco,
#             offlinePrimaryVerticesFromCTFTracks, 
#             offlinePrimaryVerticesFromRSTracks, 
             simplePersistentVertexAnalysis
#, 
#             dump 
           } 
} 
